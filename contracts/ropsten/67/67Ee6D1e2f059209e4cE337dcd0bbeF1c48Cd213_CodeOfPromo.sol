/**
 *Submitted for verification at Etherscan.io on 2021-02-25
*/

// SPDX-License-Identifier: MIT
pragma solidity ^0.6.2;

contract CodeOfPromo{
    uint256 public countCode;
    mapping(address => bool) public isApproved;
    mapping(address => uint256) public countOfPromo;
    mapping(address => mapping(uint256=>uint256[2])) public indexOfPromoCode;
    
    constructor(address promo) public {
        isApproved[promo]=true;
    }
    
    function isPromoCode(address promo, bytes32 code, uint256 index) public view returns(bool b){
        bytes memory promoCodes = bytes("cf824ffefd9852175967b1dc81e907a6b97ef9b7c2b986eb4fe2d1328ffe04ae0567999b366e6df24618a774c8e345775cacd72fff874947a853009ac63f28360244c3506fd8b48668c0018828cb25d9db9ea73f23e4d4e4266c0fd1cad58ec7241fa6349c15c2a8cf6e5a6db47e5154c31ed3557801a661f52d1c933955598609b97a9601530e0204e5184ff9465b8876f8d541c452214c63fe38ab8960e35e8aa5767a22ad1c6c71d77d8f1a728a6b5fa240257287ff72bd13b1c77e67f8aa1f06e5b404027f3ce9f003c4cb6c899327475034dd0902905b1ce640c31b76c588cea7a6df864c24a90818a446ae418006410025a0e3a18bedaf3dbc9d8246520caa4900e86b0f6f696f58895ea5e80be2d76b67eec875f562cfc678c88e894e7e5913ba28f2b3f4d5cb1547837dba298bcae599f56b659055f8a49d644946ed1385d8ffde8d27afc8a3f87f458b6e708122805ea8b6fed1f24d7dc1532dbb3ed152a2eae88554ab92e74c6a1c2afacc64832a8ff418716772fddd00b43b5e9ebbe42e88dc9463d898e7df5e2224f5373fdc5e2878f4d14e3a2cdf3aa8026ef4e5329f8b91bf494192085e42784f890c2e6f7019ece49fdc909ead1ed26a19683f1f26e58d1a50fa3455ba94b84be620dfaf64bab47e9ff964fc66f153a2ec6700ea7f36d5f472cf2d89229758f035fa1dbe2058ee7bc4a9a2062ab1d4b12911f34d0530b6a10e392f1d30a1b06c0a80e0ca777e5361100ecc2c9883bb51637e199bace2a27d19805886f72db58983732c8e66eb3536373d08c7d05d9f37a221a242650be00d2c5f59a80826a6ee75db47b3fbae81a036a482cfc49236d33fd8fb1761ce0620d3a787ab963f89904a3a7e992686d211dd1c2c8a875697f70f65963ecc57774c383ca2ddb3224ba5a4ae067e3ae440e49728a25fb9d08102229d648e1cefe79ada2f0c5dcabf7b5093de49a7dace1b0c3eb5538407bd3c7fdd7e82c99b1aec972094fb608cf73377aa4876ae2230fd130942007d91ad356699682ce9bf9b08d55a7808e9b8a393df7ba5a93a825b5505a14958f6ae68cfda8c3685fea19e3662672a848474dd469b9512d412cc25db00aca5e6eff5646daabd48bebbf492fba892ec080c5f957822cc8b93f9ad6c4f9c4a023a9f7e07ee2faa9ed5f05ff9a35d90fbc97b0b39b5ff5b87fe4c97e6e9ed6c36f46df5612b40b77584f034154a1e3818d9196ea645e46d66f2d2a0da22e3ae306929c7fe1c6cbee0e39e3f146e8d46359a4c495cc4752f5e4ea9a5321d7da3fd4dd5c27fbdd5a7a4d555967eafdf3d09fa0e71d908526c35682a4ba1cc6ff53a5e50977d3a83656784e18b2fb96c6072428ade9b3018d57a3ac5e48fc498120ac7ee3adad59157bbf9acd35a960d2cdc32535b8fa352503cb85117668b741ba02b19fcb336a4894c3004707abdee01c230f2935140ff49cc0b51bb6364211b17b8938f8b384d77d4bee17fd32f0d94d651b2782cda005b2d008a2d4d602d1a7cd5bd1e3df9dc2aecdc120361c567fb1ccbbd01ffe0163de3718bf807f95f84b89abf1ce6dcb6b9003b083bd30da41a05e6ac2c767755817d40920f8f98108197f8afc0fad306c47b00ed4f567f2b00488ce91089d1dfbe297d07a080fcbf6c8186b3318e475285e2f4d02ff14b813e8c8041052704d0155ce401cd843adbf73a6c8d59bff605d72fadee047d1831535a95a549fec110e95cc6a2866e5e2c7f38b70c2f6125e247c7ab7e7b4a7cbccd6eedb4ca6341d82c7a58a15b6696048e2dd597aeddceae026b73f8d4b36d227b089573ce14d216ab08ef76227e46799778274a46c375ff98086bbaa90f6a3883c5593a44084ac73ff791b9399424dde2cbf8649306af05a8fbb151c34f0d97ddffca8b65b7069344dec4061a02fff655c736d4c7addfa5ad2dd4cdde56f2a6479a748271bc74e5c226dc06d5dceb492e55a86d5098e64454cdaa49a1c87368c4510c879c49991901960bef47b0c43e4ac5759825dd76112fc2fc1cb53c318e423224a0d90fc0cc4ee57159c386a8df46f44c6188aab44ac7a11395cc56e63a0382cbaff897f2ed3e0ff6a80c89da831d1b1cc7dc464bba80e3d316928a8d3d12b0d0d84fe614fe259afcf0f69cc5c90046c8c34a78e89598a6fba06beba6687ab4cc2a8f38ab13fa40e8b798003af3989496dd4ef934b62db04cc891de4fea24fa41999c5501b87746a36865f6f141fe55d5fa7b2c2d344b094b17a9965ec5d0c4450371424fcfaa09c1b493c9eafdab46aa1787106356fa4d1787242ae595bf9982e885fb1603d354d08015888360009458610f18164f9b0307b0c2ff8367b478c04a5a70b4f124898d20d8af99ab3768f71a120926c5774245a1cbef1ebf5eeb42571c11d08ff8e17217586e598da6631079d19bb6ceb07d3a7c3887e8e40e6c0505e775478219369a154d30665798ac0b48c9c5c9e0b4cd0ab1975b968e848161d04ce3a4c9ae9160c0c0c849c6b20b6345928d1c19a576dbffa0bd03fd33fd12937a816957863a51d936b9e1765841ecde213101b5e98fedf19bbd149319aac1c80d19c785d35373c39d652525a2288c12172ef58e329de276b1aa80ef94c235fc265a73332ec8d377b0419047660736450526f1da53fcee0bc87b8cc307c05cef8566978d22bb8c1a3a6c8064abb251c1e85aa0e2f610bf085dc7a131951f4b9cb9e0d4bf2d0079f80c5fd681e8ec07ac8c77e915082b4fa3703d60d677c606717c04bb523ca899406ae18a2f8f45a1f2ee8d2d6bbde042baccd387ec3e23e6906f9202d426ff26512907af7c4eb26a406a5435cb705bb28344b910ccc0b9c224ae32f0c0cf82035a25bf46d92264480372243db2f7ffb9a38b6abc5bcce09c20aa1ab5aa86c5021176942d3041f8e3122dee887c902b855ce789a28b011724e997160207e235db5cbc0ddc09565c74a54ef8159fabceb06ad456249986a5d7ee220a58ca93135655d644c0c2cf553a1cfded81b44df3b12535c54208c413afc49dc4ba7d5f5874b52a02e424c190d0104bed945c67ac4eee09bcda85a29d82a406a73ed70a66950d2ee68a5eea7b926131b8118f89b8e2a0f46fd3ddcc78485e8d35c30074f1755dea43ad4e2668f2ee2c584108e99a39851cda3523c0ba08b2f747c28d9fd49c8f63523474e600a2763d2c61cf9fcdbcba63bf0295bd16c70723384102845b8137a8e59eae0988b2c28a263fe18b9937ca02b4fa2054ad946d294a713ba4e6a3ea6407972ffa80ce1b3824b21de0fe56d60a25c42bd770a8eb668fc545c309522e838af6e78e94ec5d8fb01d4ce7369df0552a9a7ce6b31b9147a75e42fe689f46011bc1b7ba19dc52b1df04f7cbf37aac34efac38793b8f07b302ecedf0cadb521ae88317c82b283608e1b6858a5c8260ce28acbfbf97713f0efe1a00ebd90153836af17a7399acb2fdac8e8f00cd13453f08d7cc59397585c22f9e0316d2b7c09bf21f340fdff1a98c623b046181b86b4149944954ffc164bc669c0eeb6a57a8084056893fee659a63f48a6c6c7c36d650320e7fadcb6427a21b7fcd2add5d598fa946497196d3ed086b28a1bf77354697e9e30e06cdc0dae80ef359ad4fb88d576bec9bbd96e12a6312d5b75c889e4502ff5682c8977e3ec7f88d34d03300b0fce9fa744b7e743779187e43d3a04a6b860084b96cf668fe97e1911f79aeaa9aadde3ccaac5bc88abff213ab989548851cbbaa61a8343bfc24ffe0f962d423ab359a2a8a27f58ea14c6da54197131c67b2e3d9a1ab9ab6a1adbc4208d5cd1ebf725a7a5be1cb7efc232cdaf84d4caa1caf1527f01e7105662a02593b6f3912fcde7e014a48d1fd91689f60a08fe79cb948b38f29b8f265500311831dbfc519302335a8280cd7de74e536160c1c7574e6c41de6ab42cf4fc8bc9a78984df4285da76ab34046ac52f73ce42f1a7783c49db003b49f8009c88947d1fb159466d503902c82e23fe11e4b04ef49086b9877353179d392aaa44a6c2c5d8216b6c9c5f836525cb0c3216499cc1959f34898d59cf729924c8a120377c87f3a235ca83647b465170b6464fe7f20d69a242fcf78cff2d2b4a90611aa78801fc8a6b4495f926760dce750459093a046aa5ba996eb7620be3dec0968b6193bf7befe7649f8781a67b43543079d8199004ef6060199e806c6b8378af9eaf0b4861e946ce8c11ec8c12f3d4025");
        for (uint i = 0; i<4; i++) {
            if(promoCodes[index+i] != code[28+i]){
                return false;
            }
        }
        for (uint j=0; j<=countOfPromo[promo]; j++){
            if(indexOfPromoCode[promo][j][0]<=index && indexOfPromoCode[promo][j][1]>=index){
                return true;
            }
        }
    }
    function setPromoInfo(address promo, uint256 num) public returns(bool){
        require(isApproved[msg.sender]);
        uint256 endIndex = countCode + num -1;
        require(endIndex<2000);
        indexOfPromoCode[promo][countOfPromo[promo]] = [countCode, countCode + num -1];
        countOfPromo[promo]+=1;
        return true;
    }
}