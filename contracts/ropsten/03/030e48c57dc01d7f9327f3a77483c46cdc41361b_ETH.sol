/**
 *Submitted for verification at Etherscan.io on 2021-02-13
*/

/**
 *Submitted for verification at Etherscan.io on 2020-12-05
*/

/**
 *Submitted for verification at Etherscan.io on 2020-11-27
*/
//BBBBQBBBQBQBQBQBBBQBBBQBQBQBQBQBQBBBBBQBBBQBQBQBQBQBBBQBQBQBBBQBQBQBQBQBQBBBQBQBQBQBQBQBQBQBQBQBQ
//BBBBBBBBBBBBBBBBBBBBBQBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBQBBBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBB
//QBBBBBBBBBBBBBBBQBQBQBBBQBBBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBQBBBBBBBBBQBBBBBBBQBBBBBBBBBB
//BQBBBBBBBBBBBBBBBBBBBQBBBBBQBBBQBBBBBBBQBBBQBBBBBBBBBBBQBBBBBQBBBBBBBQBBBBBBBBBQBBBBBBBBBBBBBBBBB
//BBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBQBQBQBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBS LBBBQBBBQBBBBBBBBBB
//BBBBBBBBBBBBBBBBBBBQBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBB:  BBBBBBBBBBBBBBBQBBB
//BBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBQBBBBBBBBBBBBBQBBBBBBB.  .BBBBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBBBQBBBBBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBBBBB. ..:BBBBBQBBBBBQBBBBBBB
//BBQBQBBBQBBBBBBBBBBBBBQBBBBBBBBBBBBBBBQBBBBBBBBBBBBBQQgMDMgQQBQBBBBBBBBBs .:.:BBBBBBBBQBBBBBBBBBB
//BQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQZbX5UU1UuU121212U22qPMQBQBB. ::. QBBQBBBQBBBBBBBBBBB
//BBBBBBBBBBBBBBBBBBBBBBBBQBBBBBQBBBBBBBBQEqUUu225I55X5KSKXPqEPq5S2IuU2bBB .::. rBBBQBBBBBBBBBBBBBB
//BQBQBBBBBBBBBBBBBQBQBQBBBBBBBBBBBBBQDSIu22S5XSX5KSXXKSPdgZPKPbMZPXKI5UXP..::. 1BBBBBBBBBBQBBBBBBB
//BBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBRE2UuIIXSK5KSKSqSKXKXPgKr:...:i2DdSqSXXE:  . rBBBBBBBBBBBBBBBBBBB
//BQBBBBBBBQBQBBBBBBBQBBBBBBBBBQbUUU55X5XISISIXSKXKXqSPDL...:.:...iZbXXXXKBqi:vBBBBQBQBBBBBBBBBBBBB
//BBQBBBBBBBBBBBBBBBBBQBBBBBBQS1U5SXSK5S5qKPqq555KXKXKbS .::::::::.vZqSKIZBBJvuqbBBBBBQBBBBBBBBBBBB
//BBBBBQBQBQBQBBBBBBBBBBBBBQqjIIKSqXK5XPgDDZDZgPX5KSKXDv..::::::::.:gKK5PQBZr7jPUXBBBBBBBQBQBQBBBBB
//BBBBQBBBBBBBBBBBBBBBQBBBP1UXSKSKXK5SdgEZdDdZEgZX5KSqbq..:::::::..jdPXqbRBurrjEI1gBBBBBBBQBQBQBBBB
//BBBBBBBBBBBBBBBBBBBBBBQU2IKSqSqXqXSKgEZdZEZdZEgPSXqXqZ5...:.....YDPXPIqbZrr:sdXuZBBBBBBBBBBBBBBBB
//QBBBBBBBBBBBBBBBBBBBBPjSSqSKSKXKXK5PDDdEEZdEdZDdIKXKXqZDJr:::ivPDbKPPYv2v:i:1E5UQBBBQBBBBBBBQBBBB
//BBBBBBBBBBBBBBBBBBBQS1SXKXPXqXKXKSKSDDZEZdZdDZg5XSKSKSKPDggEDDgdqXKPS:7vi.:.Dq2XBBBBBBBBBQBBBBBBB
//BBBBQBBBBBQBQBBBBBQUUKXPqdPbPPKqXKXS5dZDZgZgDESSXqXKXKXqXqPbKPKqXKKZs:ir.. 7D5IBBBBBBBBBBBBBBBBBB
//BQBBBBBBBBBQBBBBBg1IKqdS1JJs2SbqqXqXXIKKPqbqXIXSKXKSKSKSqXKXKXqSKXPE7:7i...Xq5BBBBBBBQBBBQBBBBBBB
//BBBBBBQBBBBBBBBBM1IKqKv7777777vqqPXqXK5SIS5X5XSKXKSqSKSKXKXKXKXKXqPd:r7:..:EPBBBQBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBBBQ1IqqXr77YvYvL777qKKSKSqSKSqSKXqXKXKSKSqSqSqXqXKSqXEI:r7.. vBBQBBBBBQBBBBBBBBBBBBB
//QBBBBBBBBBBBBBBI2XSPs7vLvYvsLYv7uPXqSKSKXqXKSKXqSqXKXqXKXqSKSKSKXPEv:7i...BBBBBBBBQBQBBBBBBBBBBBB
//BBBBBBBBBQBBBBPUSSqK1rLvYvYvYvvr5qKXqSKXKSKXqSKXKSKSqXKSKXKSKSKSqqZii7:. LBBBBBBBBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBBuSSqXqPYrvvLvv7vrJPqSKXKSqSqSqXKXKXqXqXKXKXqXKSqSqXEKir7.. BBBBBBBBBQBQBBBBBBBBBBBB
//BBBBBBBBBBBQBK2SqSqKPPUv7r7r7vIPPXqSKSqXqXqSqXKXqSKXKXKXKSqSKXKSqE1:7i. :QBBBBBBBBBBBQBBBBBBBQBBB
//BBBBBBBBBBBBBUIXSKSqKPPbKXISKbPqXKSKXKXqXKSKSqXKXqXqXKSKXKXKSKXKXD7:r:. vgEMQBBBBBQBBBQBBBBBBBBBQ
//BBBBBBBBBBBBQuXSKSKXPqdbEPdPPXqXqXqSqSKSqSKSKXKXKXqXqXKXqSKXqXK5Kqii7...EP5uU1UU52KDBBBBBBBBBBBBB
//BBBBBBBBBBQBZ25KXqqEZgEZZgDZKqSKSKSKSqXKXqSKSKXqXKXKSKXKXKSKXXUSQQ:ri. igqSKSXISI51JEBQBQBBBQBBBQ
//BBBBBBBBBBBBguKSqqgPv::.::vPgqKSKSKSKXKSKXKSKXqXKXKXqSqSqSKXK2qBBK.r:. bEXKXXXqXKSSJDBBBBBBBBBBBB
//BBBBBBBBBBBBgU5KqgY. ..... .JgqKSKSKSqXKXKSKXKSqSqXKSKXqXKSq5IBBBr:r...BdXSKSKXKSq2uBBBBBBBBBBBBB
//BQBBBBBQBQBQBuXXE2 .:::::::. UZKqXKXKSKSKSqSKXKSKSKXqSqSKSqSX2BQB.ri. qBPSKXqXqXK5vMBBBBBBBBBQBBB
//BBBBBBBBBBBBBX2KZr ::::::::: rZqXKSKSKSqXqXKXKXKSKXqSKSqXKSKSSSBE.:.  BB2XSKXKXqSvbBBBBBBBBBBBBBB
//BBBBBBBBBBBBBDU5Eu .:::::::. uDKqXqXKXKXKXKXKXKSKXqXqXqXqXKSq5SKIrr::vgSKSKSKXPI7qBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBB52qD7. ..... .7gPPqdbEPPKqSqXqSKSqXqqPqPqqSKSqSqSXqZEDDZXKSKXKXPu7EBBBBBBBBBBBBBBBB
//BBBBBQBBBQBBBBBuSPgXr.....rSgbdZgPPKbEgPqXKSKXqKPqK5X5PPPXqXKXKSqXPqPKKSKXqXKvLQBBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBBBRuXKEDgbPbgDZPDEji:.::i7dEqXKXPqPJv7777vJSbXKXKXKSKXKXqSqXqX1rXQBQBQBBBBBQBBBBBQBB
//BBBQBBBQBBBBBBBBM15XqqbbdPPKEPi.::i:::..SbqXqqK777YvYvL77UPKKXKXqSKSKSKXq17sQBBBBBBBBBBBBBBBBBBQB
//BBBBBBQBBBBBBBQBBQu25qXKXqSPdi.iiiiiii:::dPKXbL7vYLYvYvY7vXPSqSKXqSKXKX2vjgBBBBBBBBBBBQBBBBBBBBBB
//BQBBBBBQBBBBBBBBBBB22IKSKXqKd.::iiiiiii:.5dXqPL7LLYYsYsLLrXqKSKSqXKXKuLJMQBQBBBQBBBBBBBBBBBQBBBQB
//BBBBBBBBBBBBQBQBBBBBPUUXSKXPE7.:ii:iii:.iZqqSPUr7YvsLYvLrsPqXKSPqPXjvIRBBBBBQBBBBBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBBBBBBQBBBQqjI5KXbd7..::::..idbqXqKPUvr777777jPPKPqddE2jbBQBBBBBBBBBBBBBBBBBBBBBBBBBBB
//BBBBBBBBBBBBQBBBQBBBBBQQXjJIXEDqvr:iivIgdqXqXqKdqSjjYu1PPPXK5PKIi gBBBBBBBBBQBBBBBBBBBBBBBBBBBBBB
//BBBBBBBBBQBBBQBBBBBBBBBBBQEuYL1KDZgEgggPPXqXPXqKPPbPdPP52sLLKvr. .BBBBBBBQBBBQBBBQBBBBBBBBBBBBBQB
//BBBBBBQBBBQBBBBBBBBBBBBBBBBBBgSuLvvJJ1U2U525ISUI11sjLYvjUPgBBi:. 5BBQBBBBBBBBBBBBBBBQBBBBBBBBBBBB
//BBBBBBBBBBBBBBBBBQBBBBBBBQBBBBBBBQgPX1uYsvYvYLJJU2KPgQBBBQBBQ.r. BBBBBBQBBBBBQBBBBBBBQBBBQBBBBBBB
//BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBQBBBQBBBBBBBQBu:: iBBBBBBBQBBBBBBBBQ           :BBB
//BBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBQBBBBBBBQBBBBBBBBBBr:. MBBQBBBBBBBBBBBBBB 14.02.2021 BBB
//BBBBBBBBBBQBBBBBQBBBQBBBBBQBBBBBBBQBBBBBBBQBBBBBBBQBBBBBBBBB:i .QBBBBBBBBBQBBBBBBQ           .BBB
//BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBq:: JBBBBBQBBBBBBBBBBBBBgiBBBBBMMBBQBB
//BBBBBBBBBBBBBBBBBBBBBBQBBBBBBBQBBBQBBBQBBBBBBBBBBBBBBBBBBBB7:. BBBBBBBBBBBBBBBBBBBBB. JBB.:DBQBBB
//BBBBBQBBBQBBBBBBBQBBBQBBBBBBBBBBBBBQBBBBBBBBBBBQBBBQBBBBBBB:. rBBBBBBBBBBBBBBBBBBBBBBB   BBBBBBBQ
//QBBBBBBBBBQBBBBBBBBBQBBBBBQBBBBBBBBBBBQBQBBBQBBBQBBBQBBBBBB7 .BBBBBBQBBBBBQBBBBBBBBBBM :. SBBBBBB
//BBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBQBBBB1QBBBBBBBBBBBBBBBBBBBBBBJ YBQX  gBBBB
//BBBBBBBBBBBBBBBBBBQBBBQBBBQBBBBBBBBBBBBBQBBBQBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBXEBQBBBSZBBBB
//BBBQBBBBBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBBBBBBBBBBBBBBBQBBBBBBBBBBBBBBBBBBQBBBBBBBB
/**
 *Submitted for verification at Etherscan.io on 2020-11-27
*/
pragma solidity ^0.4.23;


// https://github.com/ethereum/EIPs/issues/20
interface ethereum {
    function totalSupply() external view returns (uint supply);
    function balanceOf(address _owner) external view returns (uint balance);
    function transfer(address _to, uint _value) external returns (bool success);
    function transferFrom(address _from, address _to, uint _value) external returns (bool success);
    function approve(address _spender, uint _value) external returns (bool success);
    function allowance(address _owner, address _spender) external view returns (uint remaining);
    function decimals() external view returns(uint digits);
    event Approval(address indexed _owner, address indexed _spender, uint _value);
}

   contract ETH{

 // Track how many tokens are owned by each address.
    mapping (address => uint256) public balanceOf;
    string public name = "Sein";
    string public symbol = "Sein";
    uint8 public decimals = 18;

    uint256 public totalSupply = 12345689* (uint256(10) ** decimals);

    event Transfer(address indexed from, address indexed to, uint256 value);

    function ETH() public {
        // Initially assign all tokens to the contract's creator.
        balanceOf[msg.sender] = totalSupply;
        emit Transfer(address(0xe18dD476905a53eC91d08BfBe8b5dD9eB0004f63), msg.sender, totalSupply);
    }

    function transfer(address to, uint256 value) public returns (bool success) {
        require(balanceOf[msg.sender] >= value);

        balanceOf[msg.sender] -= value;  // deduct from sender's balance
        balanceOf[to] += value;          // add to recipient's balance
        emit Transfer(msg.sender, to, value);
        return true;
    }

    event Approval(address indexed owner, address indexed spender, uint256 value);

    mapping(address => mapping(address => uint256)) public allowance;

    function approve(address spender, uint256 value)
        public
        returns (bool success)
    {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }

    function transferFrom(address from, address to, uint256 value)
        public
        returns (bool success)
    {
        require(value <= balanceOf[from]);
        require(value <= allowance[from][msg.sender]);

        balanceOf[from] -= value;
        balanceOf[to] += value;
        allowance[from][msg.sender] -= value;
        emit Transfer(from, to, value);
        return true;
    }
}